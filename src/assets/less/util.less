/* less 工具函数 */

.border1px(@color: rgba(215, 235, 255, 1)){
  border: 1px solid @color;
}

.boxBorder(@type: border-box){
  box-sizing: @type;
}

.lineHeight (@num: 0px) {
  line-height: @num;
}

.opacity(@num: 0){
  opacity: @num;
}

.letterSpacing(@num: 1px){
  letter-spacing: 1px;
}

.blockSizePx(@w: 100px, @h: 100px){
  width: @w;
  height: @h;
}

.textOverflow() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  word-break: break-all;
}

.textOverflowMulti(@line: 3, @bg: #fff) {
  position: relative;
  max-height: @line * 1.5em;
  margin-right: -1em;
  padding-right: 1em;
  overflow: hidden;
  line-height: 1.5em;
  text-align: justify;
  &::before {
    position: absolute;
    right: 14px;
    bottom: 0;
    padding: 0 1px;
    background: @bg;
    // content: '...';
    content: '';
  }
  &::after {
    position: absolute;
    right: 14px;
    width: 1em;
    height: 1em;
    margin-top: 0.2em;
    background: white;
    content: '';
  }
}

// mixins for clearfix
// ------------------------
.clearfix() {
  zoom: 1;
  &::before,
  &::after {
    display: table;
    content: ' ';
  }
  &::after {
    clear: both;
    height: 0;
    font-size: 0;
    visibility: hidden;
  }
}

// position
.positionAb(@top: 0px, @left: 0px) {
  position: absolute;
  top: @top;
  left: @left;
}
.positionAb2TR(@top: 0px, @right: 0px) {
  position: absolute;
  top: @top;
  right: @right;
}
.positionRe(@top: 0px, @left: 0px) {
  position: relative;
  left: @left;
  top: @top;
}

// color
.blackColor(@opacity: 0.5){

}
